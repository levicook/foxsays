#!/usr/bin/env node

var glob = require('glob'),
    path = require('path'),
    util = require('util');

var f = util.format;

var componentSources = glob.sync('src/website/components/*/*.js');

var sDemos = glob.sync('src/website/{components,pages}/*/demo.js'),
    sMains = glob.sync('src/website/pages/*/main.js');

var allJs = glob.sync('src/website/{components,pages}/*/*.js');


function make() {
    for (var i = 0, j = arguments.length; i < j; i++) {
        var arg = arguments[i];
        if (arg.join) {
            arg = arg.join(' ');
        }
        util.print(arg);
    }
    util.print('\n');
}

// render the makefile:

make('SHELL=/bin/bash');

make('all: build-js dist-js');

make('clean:');
make('\t', 'rm -rf build dist');

make('build-js: build-js-demos build-js-mains build-js-tests');
make('build-js-demos: ', sDemos.map(function (s) { return s.replace('src', 'build'); }));
make('build-js-mains: ', sMains.map(function (s) { return s.replace('src', 'build'); }));
make('build-js-tests: build/website/test.js');

make('dist-js: dist-js-mains');
make('dist-js-mains: ', sMains.map(function (s) { return s.replace('src', 'dist');  }));

sDemos.forEach(function (sDemo) {
    var bDemo = sDemo.replace('src', 'build'),

        bRoot = path.dirname(bDemo),
        sRoot = path.dirname(sDemo),

        sDeps = glob.sync(sRoot + '/*.js'),
        bDeps = sDeps.concat(componentSources.filter(function (bDep) {
            return (bDep.indexOf('demo.js') < 0 && bDep.indexOf('test.js') < 0);
        }));

    make(bDemo, ': ', bDeps);
    make('\t', f('test -d %s || mkdir -p %s', bRoot, bRoot));
    make('\t', f('browserify --fast %s -o %s', sDemo, bDemo));
});

sMains.forEach(function (sMain) {
    var bMain = sMain.replace('src', 'build'),
        dMain = sMain.replace('src', 'dist'),

        bRoot = path.dirname(bMain),
        dRoot = path.dirname(dMain),
        sRoot = path.dirname(sMain),

        sDeps = glob.sync(sRoot + '/*.js'),
        bDeps = sDeps.concat(componentSources).filter(function (bDep) {
            return (bDep.indexOf('demo.js') < 0 && bDep.indexOf('fixture.js') < 0 && bDep.indexOf('test.js') < 0);
        });

    make(bMain, ': ', bDeps);
    make('\t', f('test -d %s || mkdir -p %s', bRoot, bRoot));
    make('\t', f('browserify --fast %s -o %s', sMain, bMain));

    make(dMain, ': ', [bMain]);
    make('\t', f('test -d %s || mkdir -p %s', dRoot, dRoot));
    make('\t', f('cp %s %s', bMain, dMain));
});

make('build/website/test.js: ', allJs);
make('\t', f('test -d build/website || mkdir -p build/website'));
make('\t', f('browserify --fast src/website/{components,pages}/*/test.js -o build/website/test.js'));
